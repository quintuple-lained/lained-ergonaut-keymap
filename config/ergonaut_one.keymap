#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        menu {
            bindings = <&kp K_APPLICATION>;
            key-positions = <2 1>;
            layers = <0 1>;
        };

        queer-bracket-left {
            bindings = <&kp LBRC>;
            key-positions = <13 14>;
            layers = <0 1>;
        };

        angled_brackets_left {
            bindings = <&kp LT>;
            key-positions = <25 26>;
            layers = <0 1>;
        };

        screenshot {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <2 3>;
            layers = <0 1>;
        };

        square-bracket-left {
            bindings = <&kp LBKT>;
            key-positions = <15 14>;
            layers = <0 1>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <26 27>;
            layers = <0 1>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <3 4>;
            layers = <0 1>;
        };

        bracket-left {
            bindings = <&kp LPAR>;
            key-positions = <15 16>;
            layers = <0 1>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
            layers = <0 1>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <7 8>;
            layers = <0 1>;
        };

        bracket-Right {
            bindings = <&kp RPAR>;
            key-positions = <19 20>;
            layers = <0 1>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <31 32>;
            layers = <0 1>;
        };

        square-bracket-Right {
            bindings = <&kp RBKT>;
            key-positions = <20 21>;
            layers = <0 1>;
        };

        quickrust {
            bindings = <&colonX2>;
            key-positions = <33 32>;
            layers = <0 1>;
        };

        lazy_colon {
            bindings = <&kp COLON>;
            key-positions = <9 10>;
            layers = <0 1>;
        };

        queer-bracket-right {
            bindings = <&kp RBRC>;
            key-positions = <22 21>;
            layers = <0 1>;
        };

        angled_brackets_right {
            bindings = <&kp GT>;
            key-positions = <33 34>;
            layers = <0 1>;
        };

        literallyme {
            bindings = <&literallyme>;
            key-positions = <8 9>;
            layers = <0 1>;
        };
    };

    macros {
        colonX2: rust_double_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "RUST_DOUBLE_COLON";
        };

        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F4)>;
            label = "ALT_F4";
        };

        literallyme: literallyme {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp H &kp T &kp T &kp P &kp S &kp COLON &kp FSLH &kp FSLH &kp T &kp E &kp N &kp O &kp R &kp DOT &kp C &kp O &kp M &kp FSLH &kp D &kp E &kp FSLH &kp V &kp I &kp E &kp W &kp FSLH &kp I &kp C &kp H &kp MINUS &kp W &kp I &kp L &kp L &kp MINUS &kp N &kp I &kp C &kp H &kp T &kp MINUS &kp M &kp E &kp H &kp R &kp MINUS &kp I &kp C &kp H &kp MINUS &kp K &kp A &kp N &kp N &kp MINUS &kp N &kp I &kp C &kp H &kp T &kp MINUS &kp M &kp E &kp H &kp R &kp MINUS &kp I &kp C &kp H &kp MINUS &kp H &kp A &kp L &kp T &kp E &kp MINUS &kp D &kp A &kp S &kp MINUS &kp A &kp L &kp L &kp E &kp S &kp MINUS &kp N &kp I &kp C &kp H &kp T &kp MINUS &kp M &kp E &kp H &kp R &kp MINUS &kp A &kp U &kp S &kp MINUS &kp S &kp E &kp B &kp A &kp S &kp T &kp I &kp A &kp N &kp MINUS &kp K &kp U &kp R &kp Z &kp MINUS &kp K &kp U &kp R &kp Z &kp MINUS &kp G &kp I &kp F &kp MINUS &kp N1 &kp N2 &kp N9 &kp N0 &kp N2 &kp N3 &kp N2 &kp N1 &kp N8 &kp N1 &kp N2 &kp N1 &kp N7 &kp N5 &kp N9 &kp N8 &kp N2 &kp N8 &kp N2>;
            label = "LITERALLYME";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI RBKT    &kp Q           &kp W         &kp F       &kp P                &kp B        &kp J        &kp L                &kp U       &kp Y         &kp SEMI     &kp LBKT
&mt LCTRL GRAVE  &mt LEFT_GUI A  &mt LSHIFT R  &mt LALT S  &mt RIGHT_CONTROL T  &kp G        &kp M        &mt RIGHT_CONTROL N  &mt LALT E  &mt RSHIFT I  &mt LMETA O  &mt RCTRL SQT
&mt LALT MINUS   &kp Z           &kp X         &kp C       &kp D                &kp V        &kp K        &kp H                &kp COMMA   &kp DOT       &kp FSLH     &mt RALT BSLH
                                               &lt 3 ESC   &mt LSHFT TAB        &lt 2 SPACE  &lt 2 ENTER  &mt RSHFT BSPC       &lt 3 DEL
            >;
        };

        qwerty {
            bindings = <
&mt LGUI RBKT    &kp Q        &kp W        &kp E        &kp R          &kp T        &kp Y        &kp U           &kp I      &kp O    &kp P     &kp LBKT
&mt LCTRL GRAVE  &kp A        &kp S        &kp D        &kp F          &kp G        &kp H        &kp J           &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT MINUS   &mt LC(Z) Z  &mt LC(X) X  &mt LC(C) C  &mt LC(V) V    &kp B        &kp N        &kp M           &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                                           &lt 3 ESC    &mt LSHFT TAB  &lt 2 SPACE  &lt 2 ENTER  &mt RSHFT BSPC  &lt 3 DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1     &kp F2                     &kp F3                     &kp F4                     &kp F5                     &kp F6                     &kp F7                     &kp F8               &kp F9                     &kp F10                    &kp F11                    &kp F12
&mt LCTRL PLUS  &kp EXCL                   &kp AT                     &kp HASH                   &kp DLLR                   &kp PRCNT                  &kp CARET                  &kp AMPS             &kp STAR                   &kp LPAR                   &kp RPAR                   &mt RCTRL MINUS
&mt LALT EQUAL  &mt LG(NUMBER_1) NUMBER_1  &mt LG(NUMBER_2) NUMBER_2  &mt LG(NUMBER_3) NUMBER_3  &mt LG(NUMBER_4) NUMBER_4  &mt LG(NUMBER_5) NUMBER_5  &mt LG(NUMBER_6) NUMBER_6  &mt LG(NUMBER_7) N7  &mt LG(NUMBER_8) NUMBER_8  &mt LG(NUMBER_9) NUMBER_9  &mt LG(NUMBER_0) NUMBER_0  &kp RALT
                                                                      &trans                     &trans                     &trans                     &trans                     &trans               &trans
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM  &none  &none  &none   &none   &none            &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CLCK
&mt LCTRL EQUAL  &none  &none  &none   &none   &kp PRINTSCREEN  &kp LEFT      &kp DOWN  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
&kp LALT         &none  &none  &none   &none   &none            &kp C_VOL_DN  &kp END   &alt_f4    &kp PG_DN  &kp PAUSE_BREAK  &kp RALT
                               &trans  &trans  &trans           &trans        &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &tog 0        &tog 1        &tog 1        &tog 0        &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &bt BT_SEL 5  &bt BT_SEL 6  &bt BT_SEL 7  &bt BT_SEL 8  &bt BT_SEL 9  &bt BT_SEL 9  &bt BT_SEL 8  &bt BT_SEL 7  &bt BT_SEL 6  &bt BT_SEL 5  &sys_reset
                                         &trans        &none         &trans        &trans        &trans        &trans
            >;
        };
    };
};
